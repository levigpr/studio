
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user's role is therapist
    function isTherapist(userId) {
      return get(/databases/$(database)/documents/usuarios/$(userId)).data.rol == 'terapeuta';
    }

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users can create their own profile during signup.
    // Users can read and update their own profile.
    // Therapists can read any user's profile.
    match /usuarios/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isTherapist(request.auth.uid));
      allow create: if request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }

    // Therapists can create/read/update/delete any expediente.
    // Patients can only read expedientes where their UID is present.
    match /expedientes/{expedienteId} {
      allow read: if isAuthenticated() && (isTherapist(request.auth.uid) || resource.data.pacienteUid == request.auth.uid);
      allow create, update, delete: if isAuthenticated() && isTherapist(request.auth.uid);
    }

    // Therapists can create/read/update/delete any session.
    // Patients can only read sessions where their UID is present.
    match /sesiones/{sesionId} {
      allow read: if isAuthenticated() && (isTherapist(request.auth.uid) || resource.data.pacienteUid == request.auth.uid);
      allow create, update, delete: if isAuthenticated() && isTherapist(request.auth.uid);
    }
    
    // Therapists can create/read/update/delete any gallery.
    // Patients can only read galleries assigned to them.
    match /galerias/{galeriaId} {
       allow read: if isAuthenticated() && (isTherapist(request.auth.uid) || request.auth.uid in resource.data.pacientesAsignados);
       allow create, update, delete: if isAuthenticated() && isTherapist(request.auth.uid);
    }
  }
}
